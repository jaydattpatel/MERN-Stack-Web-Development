/*
display: flex

flex-wrap: wrap, wrap-reverse, none.

flex-direction : row, column, row-reverse, column-reverse

justify-content, justify-items, justify-self: start,center,end,flex-start,flex-end,space-around,space-between,space-evenly,stre;

align-content, align-items, align-self: start,center,end,flex-start,flex-end,space-around,space-between,space-evenly;

row-gap: value

column-gap: vlaue
--------------------------------------------------------
* Nomenclature :
Flex Container: An element on which the display value is set to flex.
Flex Items: Direct children of the flex containers are called flex items.
Main Axis: The axis defined by the flex-direction property.
Cross Axis: The axis perpendicular to the main axis is called the cross axis.
Single-line Container: Flex containers whose flex-wrap property is set to nowrap. By default every flex container is a single-line container.
Multi-line Containers: Flex containers whose flex-wrap property is set to wrap
----------------------------------------------------------
-> Justify : If flex-direction is row or row-reverse then justify used for horizonral (main axis or X-axis) alignment and create space around block. If flex-direction is column or column-reverse then justify used for vertical (cross axis or Y-axis) alignment and create space around block. Also, justify start, center and end modify according to direction of flex means row, column or reverse.

-> Align: If flex-direction is row or row-reverse then align used for vertical (cross axis or Y-axis) alignment and create space around block. If flex-direction is column or column-reverse then align used for horizonral (main axis or X-axis) alignment and create space around block.
Align start, center and end modify according to direction of flex means row, column or reverse.
-----------------------------------------------------------
Note: 
-> justify-content is set on the container and distributes the elements along the main axis (for flex-direction:row, that is the horizontal axis)
-> align-items is also set on the container and distributes the elements along the cross axis (for flex-direction:row, that is the vertical axis)
-> justify-items has no effect on a flex-container, itâ€™s used to distribute the elements in a grid container along the main axis within their cells
-> align-content only applies when a flex-container has multiple rows (when flex-wrap is set to wrap ), and defines how the rows of elements are distributed along the cross-axis. align-content works only on multi-line containers and has no effect on single line containers.
------------------------------------------------

*/
#main-screen {
  width: 1000px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  margin: auto;
}

#main-box {
  margin: 3px 0;
  text-align: center;
  border: 2px solid purple;
  padding: 3px;
}

.box {
  height: 250px;
  width: 250px;
  background-color: lightpink;
  border: 1px black solid;
  display: flex;
  flex-wrap: wrap;
}

.box div {
  height: 65px;
  width: 65px;
}

#div1 {
  background-color: brown;
}
#div2 {
  background-color: blueviolet;
}
#div3 {
  background-color: blue;
}
#div4 {
  background-color: crimson;
}
#div5 {
  background-color: chocolate;
}
#div6 {
  background-color: chartreuse;
}
#div7 {
  background-color: brown;
}
#div8 {
  background-color: blueviolet;
}
#div9 {
  background-color: blue;
}

.m1 {
  justify-content: space-around;
  align-content: space-around;
}

.m2 {
  justify-content: space-between;
  align-content: space-between;
}

.m3 {
  justify-content: space-evenly;
  align-content: space-evenly;
}

.m4 {
  justify-content: start;
  align-content: start;
}

.m5 {
  justify-content: center;
  align-content: center;
}

.m6 {
  justify-content: end;
  align-content: end;
}

.m7 {
  justify-content: space-around;
  align-content: start;
}

.m8 {
  justify-content: space-around;
  align-content: center;
}

.m9 {
  justify-content: space-around;
  align-content: end;
}

.m10 {
  justify-content: start;
  align-content: space-around;
}
.m11 {
  justify-content: center;
  align-content: space-around;
}
.m12 {
  justify-content: end;
  align-content: space-around;
}
.m13 {
  justify-content: space-between;
  align-content: start;
}
.m14 {
  justify-content: space-between;
  align-content: center;
}
.m15 {
  justify-content: space-between;
  align-content: end;
}
.m16 {
  justify-content: start;
  align-content: space-between;
}
.m17 {
  justify-content: center;
  align-content: space-between;
}
.m18 {
  justify-content: end;
  align-content: space-between;
}
.m19 {
  justify-content: space-evenly;
  align-content: start;
}
.m20 {
  justify-content: space-evenly;
  align-content: center;
}
.m21 {
  justify-content: space-evenly;
  align-content: end;
}
.m22 {
  justify-content: start;
  align-content: space-evenly;
}
.m23 {
  justify-content: center;
  align-content: space-evenly;
}
.m24 {
  justify-content: end;
  align-content: space-evenly;
}
