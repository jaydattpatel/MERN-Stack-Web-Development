/* 
The transform property allows you to manipulate an element visually.

It has the following methods:
rotate(),translate(), scale(), move(), skew() and matrix(). 

none : Defines that there should be no transformation	
- matrix(n,n,n,n,n,n) :	Defines a 2D transformation, using a matrix of six values	
- matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n) :	Defines a 3D transformation, using a 4x4 matrix of 16 values	
- translate(x,y) :	Defines a 2D translation	
- translate3d(x,y,z) :	Defines a 3D translation	
- translateX(x) :	Defines a translation, using only the value for the X-axis	
- translateY(y) :	Defines a translation, using only the value for the Y-axis	
- translateZ(z) :	Defines a 3D translation, using only the value for the Z-axis	
- scale(x,y) :	Defines a 2D scale transformation	
- scale3d(x,y,z) :	Defines a 3D scale transformation	
- scaleX(x) :	Defines a scale transformation by giving a value for the X-axis	
- scaleY(y) :	Defines a scale transformation by giving a value for the Y-axis	
- scaleZ(z) :	Defines a 3D scale transformation by giving a value for the Z-axis	
- rotate(angle) :	Defines a 2D rotation, the angle is specified in the parameter	
- rotate3d(x,y,z,angle) :	Defines a 3D rotation	
- rotateX(angle) :	Defines a 3D rotation along the X-axis	
- rotateY(angle) :	Defines a 3D rotation along the Y-axis	
- rotateZ(angle) :	Defines a 3D rotation along the Z-axis	
- skew(x-angle,y-angle) :	Defines a 2D skew transformation along the X- and the Y-axis	
- skewX(angle) :	Defines a 2D skew transformation along the X-axis	
- skewY(angle) :	Defines a 2D skew transformation along the Y-axis	
- perspective(n) :	Defines a perspective view for a 3D transformed element	
- initial	: Sets this property to its default value. Read about initial	
- inherit : Inherits this property from its parent element.

-----------Keyword values-----------
transform: none;

-----------Function values-----------
transform: matrix(1, 2, 3, 4, 5, 6);
transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
transform: perspective(17px);
transform: rotate(0.5turn);
transform: rotate3d(1, 2, 3, 10deg);
transform: rotateX(10deg);
transform: rotateY(10deg);
transform: rotateZ(10deg);
transform: translate(12px, 50%);
transform: translate3d(12px, 50%, 3em);
transform: translateX(2em);
transform: translateY(3in);
transform: translateZ(2px);
transform: scale(2, 0.5);
transform: scale3d(2.5, 1.2, 0.3);
transform: scaleX(2);
transform: scaleY(0.5);
transform: scaleZ(0.3);
transform: skew(30deg, 20deg);
transform: skewX(30deg);
transform: skewY(1.07rad);

-----------Multiple function values-----------
transform: translateX(10px) rotate(10deg) translateY(5px);
transform: perspective(500px) translate(10px, 0, 20px) rotateY(3deg);

---------Global values-----------
transform: inherit;
transform: initial;
transform: revert;
transform: revert-layer;
transform: unset

*/

.main {
  width: 90%;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.main > div {
  height: 10rem;
  width: 10rem;
  border: 1px solid purple;
  margin: 2rem;
}

.main div div {
  height: 5rem;
  width: 5rem;
  background-color: yellow;
  border: 1px solid black;
  margin: 1rem;
}

.div1 {
  transform: rotate(90deg);
}
.div2 {
  transform: rotateX(90deg);
}
.div3 {
  transform: rotateY(90deg);
}
.div4 {
  transform: rotateZ(90deg);
}
.div5 {
  transform: rotate3d(90deg, 90deg, 90deg);
}
.div6 {
  transform: skew(30deg, 20deg);
}
.div7 {
  transform: skewX(30deg);
}
.div8 {
  transform: skewY(20deg);
}

.div9 {
  transform: scale(0.5, 0.5);
}
.div10 {
  transform: scaleX(0.5);
}
.div11 {
  transform: scaleY(0.5);
}
.div12 {
  transform: scaleZ(0.5);
}
.div13 {
  transform: scale3d(0.5, 0.5, 0.5);
}
.div14 {
  transform: translate(60px, 60%);
}
.div15 {
  transform: translateX(50px);
}
.div16 {
  transform: translateY(50px);
}
.div17 {
  transform: translateZ(50px);
}
.div18 {
  transform: translate3d(20px, 20px, 20px);
}
